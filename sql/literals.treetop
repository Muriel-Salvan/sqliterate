module Sql
  grammar Literals
    include Space
    include Identifier
    include Keywords
    include String

    rule literal_value
      multi_string / numeric_literal / boolean_literal
    end

    rule positional_param
      '$' digits {
        def value
          [:p, digits.value]
        end
      }
    end

    rule numeric_literal
      decimal_literal numeric_exponent {
        def value
          decimal_literal.value * (10 ** numeric_exponent.value)
        end
      }
      /
      decimal_literal
    end

    rule decimal_literal
      ( digits ( '.' digits? )? / '.' digits ) {
        def value
          text_value.to_f
        end
      }
    end

    rule numeric_exponent
      'e' s:( '+' / '-' )? digits {
        def value
          digits.value * ( s.text_value == '-' ? -1 : 1 )
        end
      }
    end

    rule digits
      [0-9]+ { def value; text_value.to_i end }
    end

    rule boolean_literal
      true_kw { def value; true end }
      /
      false_kw { def value; false end }
    end
  end
end
